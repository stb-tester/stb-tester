#!/bin/bash

# Copyright 2013 YouView TV Ltd.
# License: LGPL v2.1 or (at your option) any later version (see
# https://github.com/drothlis/stb-tester/blob/master/LICENSE for details).

#/ usage: stbt templatematch [-h] [-v] \
#/             <full frame> <template image> [<wait_for_match parameters>...]
#/
#/ Run stbt's templatematch algorithm against a single frame (which you can
#/ capture using `stbt screenshot`).
#/
#/ e.g.: stbt templatematch full-frame.png button.png confirm_threshold=0.20

usage() { grep '^#/' "$0" | cut -c4-; }

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help) usage; exit 0;;
        -v) v="-v";;
        *) break;;
    esac
    shift
done
[ $# -lt 2 ] && { usage >&2; exit 1; }
videoframe="$1" template="$2"; shift 2
args=""
while [ $# -gt 0 ]; do
    a=$(echo "$1" |
        perl -lpe '/^(match_method|confirm_method)=/ && s/=(.*)/="\1"/')
    args+=", $a"
    shift
done
args=${args#, }

script="stbt-templatematch.$$.py"
trap "rm $script" EXIT

cat > $script <<-EOF
	import sys
	if not stbt.detect_match(
	        "$template", match_parameters=MatchParameters($args)
	        ).next().match:
	    print "Didn't find match for '$template'."
	    sys.exit(1)
	EOF

STBT_LIBEXEC="$(dirname "$0")"

"$STBT_LIBEXEC/stbt-run" -v $v --source-pipeline="filesrc location=$videoframe \
        ! decodebin2 ! imagefreeze ! ffmpegcolorspace" \
    --control=none $script
